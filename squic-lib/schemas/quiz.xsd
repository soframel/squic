<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012 soframel. All rights reserved. This program and the 
	accompanying materials are made available under the terms of the GNU Public 
	License v3.0 which accompanies this distribution, and is available at http://www.gnu.org/licenses/gpl.html 
	Contributors: soframel - initial API and implementation -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

	<xsd:element name="quiz">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="gameMode" type="gameMode" minOccurs="0"/>
				<xsd:element name="resultAction" type="resultActions" />
				<xsd:element name="questions" type="questions" />
				<xsd:element name="responses" type="responses" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="name" type="xsd:string" use="required" />
			<xsd:attribute name="id" type="xsd:string" use="required" />
			<xsd:attribute name="language" type="xsd:language" use="optional" />
			<xsd:attribute name="icon" type="xsd:string" use="optional" />
			<xsd:attribute name="widthToHeightResponsesRatio" type="xsd:float"
				default="1" use="optional" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:complexType name="gameMode">
		<xsd:choice>
			<xsd:element name="retryUntilCorrect"/> <!-- this is the default mode if no gameMode is given -->
			<xsd:element name="countPointsInGame"> <!-- incorrect answers get incorrectAnswerPoints, correct answers get correctAnswerPoints, and the next question is played -->
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="correctAnswerPoints" type="xsd:int" minOccurs="0"/> <!-- default is 1 -->
						<xsd:element name="incorrectAnswerPoints" type="xsd:int" minOccurs="0"/> <!-- default is 0, can be negative -->
						<xsd:element name="reward" type="reward" minOccurs="0"></xsd:element> <!-- it's possible to give a reward -->
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="reward">
		<xsd:sequence>
			<xsd:element name="text" type="xsd:string" minOccurs="0"></xsd:element> <!-- text of the reward that will be shown on the points page -->
		</xsd:sequence>
		<!-- for all rewards, give the minimum number of points required -->
		<xsd:attribute name="pointsRequired" type="xsd:int" use="required"/>
	</xsd:complexType>
	
	<!-- Reward that is simply calling an Intent -->
	<xsd:complexType name="intentReward">
		<xsd:complexContent>
			<xsd:extension base="reward">
				<xsd:sequence>
					<xsd:element name="action" type="xsd:string"/>
					<xsd:element name="uri" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="questions">
		<xsd:sequence>
			<xsd:element name="question" type="question" minOccurs="1"
				maxOccurs="unbounded" />
		</xsd:sequence>
		<!-- if specified, only this number of questions will be played -->
		<xsd:attribute name="nbQuestions" type="xsd:int" use="optional" />
	</xsd:complexType>
	
	<xsd:complexType name="calculationQuestions">
		<xsd:complexContent>
			<xsd:extension base="questions">
				<xsd:attribute name="nbRandom" type="xsd:int" use="required"/>
				<xsd:attribute name="minValue" type="xsd:int" use="required"/>
				<xsd:attribute name="maxValue" type="xsd:int" use="required"/>
				<xsd:attribute name="nbOperands" type="xsd:int" use="required"/>
				<xsd:attribute name="operator" type="operator" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:simpleType name="operator">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="+"/>
			<xsd:enumeration value="-"/>
			<xsd:enumeration value="x"/>
			<xsd:enumeration value="\"/>
		</xsd:restriction>
	</xsd:simpleType>	

	<!-- Word questions are based on an external, CSV dictionary file -->
	<xsd:complexType name="wordQuestions" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="questions">
				<xsd:sequence>
					<xsd:element name="dictionnary" type="xsd:string"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- genreQuestions ask for the gender of each word, based on all the possible genders found in the dictionary (ex: der, die, das) -->
	<xsd:complexType name="genreQuestions">
		<xsd:complexContent>
			<xsd:extension base="wordQuestions">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

    <!-- question asking user to enter the word spoken (this is not a Multiple Choice question) -->
	<xsd:complexType name="writingQuestions">
		<xsd:complexContent>
			<xsd:extension base="wordQuestions">
				<xsd:attribute name="questionPrefix" type="xsd:string" use="optional"/>
				<xsd:attribute name="questionSuffix" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

    <!-- readingQuestions read a text (not shown), and choose one of the text elements as answer -->
    <xsd:complexType name="readingQuestions">
        <xsd:complexContent>
            <xsd:extension base="wordQuestions">
                <xsd:attribute name="questionPrefix" type="xsd:string" use="optional"/>
                <xsd:attribute name="questionSuffix" type="xsd:string" use="optional"/>
                <xsd:attribute name="nbRandom" type="xsd:int" use="required"/>
             </xsd:extension>
         </xsd:complexContent>
    </xsd:complexType>


    <xsd:complexType name="responses">
		<xsd:sequence>
			<xsd:element name="response" type="response" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- action played on a result (correct answer, incorrect answer, or quiz finished) -->
	<xsd:complexType name="resultActions">
		<xsd:sequence>
			<xsd:element name="goodResultAction" type="resultAction" />
			<xsd:element name="badResultAction" type="resultAction" />
			<xsd:element name="quizFinishedAction" type="resultAction" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="resultAction">
	</xsd:complexType>

	<!-- speech file is played -->
	<xsd:complexType name="speechResultAction">
		<xsd:complexContent>
			<xsd:extension base="resultAction">
				<xsd:sequence>
					<xsd:element name="speechFile" type="soundFile" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- a text is read by the TextToSpeech engine -->
	<xsd:complexType name="textToSpeechResultAction">
		<xsd:complexContent>
			<xsd:extension base="resultAction">
				<xsd:sequence>
					<xsd:element name="text" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- similar to textToSpeechResultAction, but more flexibility in the text spoken -->
	<xsd:complexType name="readResultAction">
		<xsd:complexContent>
			<xsd:extension base="resultAction">
				<xsd:sequence maxOccurs="unbounded">
					<xsd:choice>
						<xsd:element name="text" type="xsd:string"/>
						<xsd:element name="question"/>
						<xsd:element name="response"/>
						<xsd:element name="goodResponse"/>
					</xsd:choice>
				</xsd:sequence>
				<xsd:attribute name="showResponseDialog" type="xsd:boolean" default="false" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Questions -->
	<xsd:complexType name="question">
		<xsd:sequence>
			<xsd:element name="possibleResponses">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="responseRef" type="responseRef"
							minOccurs="1" maxOccurs="unbounded" /> <!-- specify the possible responses -->
						<xsd:element name="randomResponses" type="randomResponses"
							minOccurs="0" maxOccurs="1" /> <!-- if used, responses will be selected randomly based on all the possible responses of the quiz -->
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string" use="required" />
		<xsd:attribute name="level" type="level" use="required" />
	</xsd:complexType>

	<xsd:complexType name="spokenQuestion">
		<xsd:complexContent>
			<xsd:extension base="question">
				<xsd:sequence>
					<xsd:element name="speechFile" type="soundFile" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="textToSpeechQuestion">
		<xsd:complexContent>
			<xsd:extension base="question">
				<xsd:sequence>
					<xsd:element name="text" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="textQuestion">
		<xsd:complexContent>
			<xsd:extension base="question">
				<xsd:sequence>
					<xsd:element name="text" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:simpleType name="level">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="easy" />
			<xsd:enumeration value="normal" />
			<xsd:enumeration value="hard" />
		</xsd:restriction>
	</xsd:simpleType>

	<!-- Responses -->
	<xsd:complexType name="response">
		<xsd:attribute name="id" type="xsd:string" use="required" />
	</xsd:complexType>

	<xsd:complexType name="randomResponses">
		<xsd:attribute name="nb" type="xsd:int" />
	</xsd:complexType>

	<!-- most responses are touchResponse, showing the response in a rectangle to be touched for selection -->
	<xsd:complexType name="touchResponse">
		<xsd:complexContent>
			<xsd:extension base="response">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- an image is shown as the response -->
	<xsd:complexType name="imageResponse">
		<xsd:complexContent>
			<xsd:extension base="touchResponse">
				<xsd:sequence>
					<xsd:element name="imageFile" type="imageFile" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- a color is shown as the response -->
	<xsd:complexType name="colorResponse">
		<xsd:complexContent>
			<xsd:extension base="touchResponse">
				<xsd:sequence>
					<xsd:element name="color" type="color" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!--a text is shown as the response -->
	<xsd:complexType name="textResponse">
		<xsd:complexContent>
			<xsd:extension base="touchResponse">
				<xsd:sequence>
					<xsd:element name="text" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="responseRef">
		<xsd:attribute name="id" type="xsd:string" use="required" />
		<xsd:attribute name="correct" type="xsd:boolean" use="optional"
			default="false" />
	</xsd:complexType>

	<!-- Resources -->
	<xsd:complexType name="soundFile">
		<xsd:attribute name="file" type="xsd:string" use="required" />
	</xsd:complexType>

	<xsd:complexType name="imageFile">
		<xsd:attribute name="file" type="xsd:string" use="required" />
		<!-- <xsd:attribute name="type" type="imageType" use="required"/> -->
	</xsd:complexType>

	<xsd:simpleType name="imageType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="png" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="color">
		<xsd:attribute name="colorCode" type="xsd:string" use="required" />
	</xsd:complexType>

</xsd:schema>
